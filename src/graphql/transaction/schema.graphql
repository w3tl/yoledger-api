extend type Query {
  transactions(dateStart: Date!, dateEnd: Date, page: Int = 0, itemsPerPage: Int = 20): [Transaction]
  transaction(id: ID!): Transaction
}
extend type Mutation {
  addTransaction(input: AddTransactionInput!): AddTransactionPayload
  deleteTransaction(id: ID!): DeleteTransactionPayload
  updateTransaction(id: ID!, input: UpdateTransactionInput!): UpdateTransactionPayload
}

type Transaction {
  id: ID!
  amount: Float!
  source: Account!
  destination: Account!
  date: Date!
}
input AddTransactionInput {
  source: String!
  destination: String!
  amount: Float!
  date: Date
}
type AddTransactionPayload {
  transaction: Transaction
}
type DeleteTransactionPayload {
  success: Boolean!
  id: ID
}
input UpdateTransactionInput {
  amount: Float
  source: String
  destination: String
  date: Date
}
type UpdateTransactionPayload {
  transaction: Transaction
}
